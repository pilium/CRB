"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

window.addEventListener('load', function () {
  // // preloader
  // const preloader = document.getElementById('preloader');
  // if (preloader) {
  // 	setTimeout(() => {
  // 		preloader.classList.add('active');
  // 		document.body.style.overflow = 'visible';
  // 	}, 100);
  // }
  // // END Preloader
  // const mapContainer = document.getElementById('map');
  var wrapperMenu = document.querySelector('.wrapper-menu');
  var sidenav = document.querySelector('.js-sidenav');
  var overlay = document.querySelector('.sidenav-overlay');
  var acc = document.getElementsByClassName('acc-header');
  var gallery = document.querySelector('.gallery');
  var nav = document.querySelector('#nav-main'); // Modal

  var modal = function modal() {
    var link = document.querySelector('.js-header-info__writeToUs-link');
    var popup = document.querySelector('.modal');
    var close = popup.querySelector('.modal-close__btn');
    var overlay = document.querySelector('.modal-overlay');
    link.addEventListener('click', function (event) {
      event.preventDefault();
      popup.classList.toggle('modal-show');
      overlay.classList.toggle('show');
    });
    close.addEventListener('click', function (event) {
      event.preventDefault();
      popup.classList.remove('modal-show');
      overlay.classList.toggle('show');
    });
    document.addEventListener('click', function (e) {
      if (e.target.classList.contains('modal-overlay')) {
        popup.classList.remove('modal-show');
        overlay.classList.toggle('show');
      }
    });
  };

  modal(); // END Modal
  // // Map
  // if (mapContainer) {
  // 	function init() {
  // 		const myMap = new ymaps.Map('map', {
  // 			center: [47.5396, 42.0151],
  // 			controls: [
  // 				'typeSelector',
  // 				'fullscreenControl',
  // 				'geolocationControl',
  // 				'rulerControl',
  // 				'routeButtonControl',
  // 			],
  // 			zoom: 16,
  // 		});
  // 		const control = myMap.controls.get('routeButtonControl');
  // 		control.routePanel.state.set('from', 'Романовская союзный 97а');
  // 		const myPlacemark = new ymaps.Placemark(
  // 			[47.5398, 42.0153], {
  // 				hintContent: 'Ул. Союзная 97а',
  // 				balloonContent: 'Поликлиника',
  // 			}, {
  // 				preset: 'islands#blueMedicalIcon',
  // 			},
  // 		);
  // 		myMap.geoObjects.add(myPlacemark);
  // 	}
  // 	ymaps.ready(init);
  // }
  // // END Map
  // Time to footer

  function addTimeFooter() {
    var date = new Date();
    var options = {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    };
    var container = document.querySelector('.js-footer-info__date');
    container.innerHTML = date.toLocaleString('ru', options);
  }

  setTimeout(addTimeFooter, 100); // END Time to footer
  // Sidemenu

  if (wrapperMenu) wrapperMenu.addEventListener('click', function () {
    wrapperMenu.classList.toggle('open');
    sidenav.classList.toggle('show');
    overlay.classList.toggle('show');
  });
  document.addEventListener('click', function (e) {
    if (e.target.classList.contains('sidenav-overlay')) {
      wrapperMenu.classList.toggle('open');
      sidenav.classList.toggle('show');
      overlay.classList.toggle('show');
    }
  }); // END Sidemenu
  // accordion

  for (var i = 0; i < acc.length; i++) {
    acc[i].addEventListener('click', function (e) {
      /* Toggle between adding and removing the "active" class,
      to highlight the button that controls the panel */
      e.preventDefault();
      this.classList.toggle('active');
      /* Toggle between hiding and showing the active panel */

      var panel = this.nextElementSibling;
      panel.classList.toggle('active');
    });
  } // END Accordion
  // peopleCard


  function peopleCard() {
    var peopleCard = document.querySelectorAll('.material-card > .mc-btn-action');

    for (var _i = 0; _i < peopleCard.length; _i++) {
      peopleCard[_i].addEventListener('click', function () {
        var card = this.parentNode;
        var icon = this.querySelector('i');
        icon.classList.add('fa-spin-fast');

        if (card.classList.contains('mc-active')) {
          card.classList.remove('mc-active');
          setTimeout(function () {
            icon.classList.remove('fa-arrow-left');
            icon.classList.remove('fa-spin-fast');
            icon.classList.add('fa-bars');
          }, 800);
        } else {
          card.classList.add('mc-active');
          setTimeout(function () {
            icon.classList.remove('fa-bars');
            icon.classList.remove('fa-spin-fast');
            icon.classList.add('fa-arrow-left');
          }, 800);
        }
      });
    }
  }

  peopleCard(); // END PeopleCard
  // Gallery

  if (gallery) {
    baguetteBox.run('.gallery-wrap', {
      async: true
    });
  } // END Gallery
  // FixedNav


  var topOfNav = nav.offsetTop;

  function fixNav() {
    if (window.scrollY >= topOfNav) {
      document.body.style.paddingTop = nav.offsetHeight + 'px';
      nav.classList.add('fixed-nav');
    } else {
      nav.classList.remove('fixed-nav');
      document.body.style.paddingTop = 0;
    }
  }

  window.addEventListener('scroll', fixNav); // END FixedNav
  // Menu dropdown

  var dropdownItems = document.querySelectorAll('.fixed-width');

  var _loop = function _loop(_i2) {
    dropdownItems[_i2].addEventListener('keyup', function (event) {
      if (event.keyCode === 13) {
        var subMenu = dropdownItems[_i2].querySelector('.menu');

        dropdownItems[_i2].classList.toggle('fixed-width--show');

        subMenu.addEventListener('blur', function () {
          subMenu.style.display = 'none';
        });
      }
    });
  };

  for (var _i2 = 0; _i2 < dropdownItems.length; _i2++) {
    _loop(_i2);
  } // END Menu dropdown
  // Blind


  var blindtrigger = document.querySelector('.js-starblind-trigger');
  var body = document.querySelector('.main-wrapper');
  var blindPanel = document.querySelector('.js-blindHeaderPanel');

  if (!localStorage.getItem("blindClasses")) {
    var arr = ['font1', 'kerning1', 'color1'];
    var classArr = JSON.stringify(arr);
    localStorage.setItem('blindClasses', classArr);

    for (var _i3 = 0; _i3 < arr.length; _i3++) {
      body.classList.add(arr[_i3]);
    }
  }

  blindtrigger.addEventListener('click', function () {
    blindPanel.classList.toggle('blindHeaderPanel--show');
    body.classList.toggle('starblind');
    test();
  });

  function test() {
    if (body.classList.contains('starblind')) {
      var buttons = _toConsumableArray(blindPanel.querySelectorAll('button'));

      var buttonLowFontSize = blindPanel.querySelector('.blind-fontSize--low');
      var buttonNormalFontSize = blindPanel.querySelector('.blind-fontSize--normal');
      var buttonBigFontSize = blindPanel.querySelector('.blind-fontSize--big');
      var htmlElem = document.querySelector('html');
      var style = window.getComputedStyle(htmlElem, null).getPropertyValue('font-size');
      var defaultFontSize = parseFloat(style); // now you have a proper float for the font size (yes, it can be a float, not just an integer)
      // htmlElem.style.fontSize = (defaultFontSize + 10) + 'px';

      buttons.forEach(function (button) {
        button.addEventListener('click', function () {
          buttons.filter(function (obj) {
            return button.getAttribute('data-group') == obj.getAttribute('data-group');
          }).map(function (obj) {
            body.classList.remove(obj.getAttribute('data-test'));
          });

          if (button.hasAttribute('data-test')) {
            body.classList.add(button.getAttribute('data-test'));
          }
        });
      });

      buttonLowFontSize.onclick = function () {
        htmlElem.style.fontSize = defaultFontSize - 2 + 'px';
      };

      buttonNormalFontSize.onclick = function () {
        htmlElem.style.fontSize = defaultFontSize + 'px';
      };

      buttonBigFontSize.onclick = function () {
        htmlElem.style.fontSize = defaultFontSize + 6 + 'px';
      };
    }
  }
});
document.addEventListener("DOMContentLoaded", function () {
  var lazyImages = [].slice.call(document.querySelectorAll(".lazy-img"));
  var active = false;

  var lazyLoad = function lazyLoad() {
    if (active === false) {
      active = true;
      setTimeout(function () {
        lazyImages.forEach(function (lazyImage) {
          if (lazyImage.getBoundingClientRect().top <= window.innerHeight && lazyImage.getBoundingClientRect().bottom >= 0 && getComputedStyle(lazyImage).display !== "none") {
            lazyImage.src = lazyImage.dataset.src;
            lazyImage.classList.remove("lazy");
            lazyImages = lazyImages.filter(function (image) {
              return image !== lazyImage;
            });

            if (lazyImages.length === 0) {
              document.removeEventListener("scroll", lazyLoad);
              window.removeEventListener("resize", lazyLoad);
              window.removeEventListener("orientationchange", lazyLoad);
            }
          }
        });
        active = false;
      }, 200);
    }
  };

  document.addEventListener("scroll", lazyLoad);
  window.addEventListener("resize", lazyLoad);
  window.addEventListener("orientationchange", lazyLoad);
});

(function () {
  var backTop = document.getElementsByClassName('js-cd-top')[0];
  var offset = 300;
  var offsetOpacity = 1200;
  var scrollDuration = 700;
  var scrolling = false;

  if (backTop) {
    window.addEventListener('scroll', function (event) {
      if (!scrolling) {
        scrolling = true;
        !window.requestAnimationFrame ? setTimeout(checkBackToTop, 250) : window.requestAnimationFrame(checkBackToTop);
      }
    }); //smooth scroll to top

    backTop.addEventListener('click', function (event) {
      event.preventDefault();
      !window.requestAnimationFrame ? window.scrollTo(0, 0) : scrollTop(scrollDuration);
    });
  }

  function checkBackToTop() {
    var windowTop = window.scrollY || document.documentElement.scrollTop;
    windowTop > offset ? addClass(backTop, 'cd-top--show') : removeClass(backTop, 'cd-top--show', 'cd-top--fade-out');
    windowTop > offsetOpacity && addClass(backTop, 'cd-top--fade-out');
    scrolling = false;
  }

  function scrollTop(duration) {
    var start = window.scrollY || document.documentElement.scrollTop;
    var currentTime = null;

    var animateScroll = function animateScroll(timestamp) {
      if (!currentTime) currentTime = timestamp;
      var progress = timestamp - currentTime;
      var val = Math.max(Math.easeInOutQuad(progress, start, -start, duration), 0);
      window.scrollTo(0, val);

      if (progress < duration) {
        window.requestAnimationFrame(animateScroll);
      }
    };

    window.requestAnimationFrame(animateScroll);
  }

  Math.easeInOutQuad = function (t, b, c, d) {
    t /= d / 2;
    if (t < 1) return c / 2 * t * t + b;
    t--;
    return -c / 2 * (t * (t - 2) - 1) + b;
  }; //class manipulations - needed if classList is not supported


  function hasClass(el, className) {
    if (el.classList) return el.classList.contains(className);else return !!el.className.match(new RegExp("(\\s|^)".concat(className, "(\\s|$)")));
  }

  function addClass(el, className) {
    var classList = className.split(' ');
    if (el.classList) el.classList.add(classList[0]);else if (!hasClass(el, classList[0])) el.className += " ".concat(classList[0]);
    if (classList.length > 1) addClass(el, classList.slice(1).join(' '));
  }

  function removeClass(el, className) {
    var classList = className.split(' ');
    if (el.classList) el.classList.remove(classList[0]);else if (hasClass(el, classList[0])) {
      var reg = new RegExp("(\\s|^)".concat(classList[0], "(\\s|$)"));
      el.className = el.className.replace(reg, ' ');
    }
    if (classList.length > 1) removeClass(el, classList.slice(1).join(' '));
  }
})();