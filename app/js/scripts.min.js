"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,o=new Array(e.length);t<e.length;t++)o[t]=e[t];return o}}window.addEventListener("load",function(){function e(){var e=new Date,t={year:"numeric",month:"long",day:"numeric"};document.querySelector(".js-footer-info__date").innerHTML=e.toLocaleString("ru",t)}function t(){window.scrollY>=q?(document.body.style.paddingTop=y.offsetHeight+"px",y.classList.add("fixed-nav")):(y.classList.remove("fixed-nav"),document.body.style.paddingTop=0)}function o(){if(_.classList.contains("starblind")){var e=_toConsumableArray(j.querySelectorAll("button")),t=j.querySelector(".blind-fontSize--low"),o=j.querySelector(".blind-fontSize--normal"),n=j.querySelector(".blind-fontSize--big"),s=document.querySelector("html"),a=window.getComputedStyle(s,null).getPropertyValue("font-size"),r=parseFloat(a);console.log(r),e.forEach(function(t){t.addEventListener("click",function(){e.filter(function(e){return t.getAttribute("data-group")==e.getAttribute("data-group")}).map(function(e){_.classList.remove(e.getAttribute("data-test"))}),t.hasAttribute("data-test")&&_.classList.add(t.getAttribute("data-test"))})}),t.onclick=function(){s.style.fontSize=r-2+"px"},o.onclick=function(){s.style.fontSize=r+"px"},n.onclick=function(){s.style.fontSize=r+6+"px"}}}var n=document.getElementById("preloader");n&&setTimeout(function(){n.classList.add("active"),document.body.style.overflow="visible"},100);var s=document.querySelector(".js-hero-slider"),a=document.querySelector(".blog-slider"),r=document.querySelector(".news-slider"),i=document.getElementById("map"),l=document.querySelector(".js-header-info__writeToUs-link"),c=document.querySelector(".modal"),d=c.querySelector(".modal-close__btn"),u=c.querySelector("[name=login]"),m=document.querySelector(".wrapper-menu"),f=document.querySelector(".js-sidenav"),g=document.querySelector(".sidenav-overlay"),p=document.getElementsByClassName("acc-header"),w=document.querySelector(".testimonials-slider"),v=document.querySelector(".gallery"),y=document.querySelector("#nav-main");if(function(){var e=document.querySelector(".modal-overlay");l.addEventListener("click",function(t){t.preventDefault(),c.classList.toggle("modal-show"),e.classList.toggle("show"),u.focus()}),d.addEventListener("click",function(t){t.preventDefault(),c.classList.remove("modal-show"),e.classList.toggle("show")}),document.addEventListener("click",function(t){t.target.classList.contains("modal-overlay")&&(c.classList.remove("modal-show"),e.classList.toggle("show"))})}(),s){new Swiper(".swiper-container",{loop:!0,parallax:!0,autoplay:{delay:5e3},speed:1e3,mousewheelControl:!0})}if(a){new Swiper(".blog-slider",{spaceBetween:30,effect:"fade",loop:!0,grabCursor:!0,autoplay:{delay:7e3},pagination:{el:".blog-slider__pagination",clickable:!0}})}if(r){new Swiper(".news-slider",{effect:"coverflow",grabCursor:!0,loop:!1,centeredSlides:!1,keyboard:!0,spaceBetween:10,slidesPerView:"3",speed:300,coverflowEffect:{rotate:0,stretch:0,depth:0,modifier:1,slideShadows:!1},breakpoints:{1230:{slidesPerView:3},900:{slidesPerView:2},650:{slidesPerView:1,spaceBetween:0,centeredSlides:!0}},simulateTouch:!0,navigation:{nextEl:".news-slider-next",prevEl:".news-slider-prev"},pagination:{el:".news-slider__pagination",clickable:!0}})}if(w){new Swiper(w,{autoHeight:!0,loop:!0,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}})}if(i){var L=function(){var e=new ymaps.Map("map",{center:[47.5396,42.0151],controls:["typeSelector","fullscreenControl","geolocationControl","rulerControl","routeButtonControl"],zoom:16});e.controls.get("routeButtonControl").routePanel.state.set("from","Романовская союзный 97а");var t=new ymaps.Placemark([47.5398,42.0153],{hintContent:"Ул. Союзная 97а",balloonContent:"Поликлиника"},{preset:"islands#blueMedicalIcon"});e.geoObjects.add(t)};ymaps.ready(L)}setTimeout(e,100),m&&m.addEventListener("click",function(){m.classList.toggle("open"),f.classList.toggle("show"),g.classList.toggle("show")}),document.addEventListener("click",function(e){e.target.classList.contains("sidenav-overlay")&&(m.classList.toggle("open"),f.classList.toggle("show"),g.classList.toggle("show"))});for(var b=0;b<p.length;b++)p[b].addEventListener("click",function(e){e.preventDefault(),this.classList.toggle("active"),this.nextElementSibling.classList.toggle("active")});!function(){for(var e=document.querySelectorAll(".material-card > .mc-btn-action"),t=0;t<e.length;t++)e[t].addEventListener("click",function(){var e=this.parentNode,t=this.querySelector("i");t.classList.add("fa-spin-fast"),e.classList.contains("mc-active")?(e.classList.remove("mc-active"),setTimeout(function(){t.classList.remove("fa-arrow-left"),t.classList.remove("fa-spin-fast"),t.classList.add("fa-bars")},800)):(e.classList.add("mc-active"),setTimeout(function(){t.classList.remove("fa-bars"),t.classList.remove("fa-spin-fast"),t.classList.add("fa-arrow-left")},800))})}(),v&&baguetteBox.run(".gallery-wrap",{async:!0});for(var S=document.querySelectorAll("form"),h=0;h<S.length;h++)!function(e){S[e].onsubmit=function(t){t.preventDefault(),S[e].classList.add("signed")}}(h);var q=y.offsetTop;window.addEventListener("scroll",t);for(var E=document.querySelectorAll(".fixed-width"),A=0;A<E.length;A++)!function(e){E[e].addEventListener("keyup",function(t){if(13===t.keyCode){var o=E[e].querySelector(".menu");E[e].classList.toggle("fixed-width--show"),o.addEventListener("blur",function(){o.style.display="none"})}})}(A);var k=document.querySelector(".js-starblind-trigger"),_=document.querySelector(".main-wrapper"),T=document.querySelectorAll(".js-sliderNews--blind"),x=document.querySelector(".js-blindTestimonials"),C=document.querySelector(".js-organizationBlind"),j=document.querySelector(".js-blindHeaderPanel");if(!localStorage.getItem("blindClasses")){var B=["font1","kerning1","color1"],z=JSON.stringify(B);localStorage.setItem("blindClasses",z);for(var I=0;I<B.length;I++)_.classList.add(B[I])}k.addEventListener("click",function(){if(j.classList.toggle("blindHeaderPanel--show"),_.classList.toggle("starblind"),x&&x.classList.toggle("cd-testimonials__blind--show"),T)for(var e=0;e<T.length;e++)T[e].classList.toggle("blindSliderNews--show");C&&C.classList.toggle("organizations-main__wrapper--blind"),o()})}),function(){function e(){var e=window.scrollY||document.documentElement.scrollTop;e>r?n(a,"cd-top--show"):s(a,"cd-top--show","cd-top--fade-out"),e>i&&n(a,"cd-top--fade-out"),l=!1}function t(e){var t=window.scrollY||document.documentElement.scrollTop,o=null,n=function n(s){o||(o=s);var a=s-o,r=Math.max(Math.easeInOutQuad(a,t,-t,e),0);window.scrollTo(0,r),a<e&&window.requestAnimationFrame(n)};window.requestAnimationFrame(n)}function o(e,t){return e.classList?e.classList.contains(t):!!e.className.match(new RegExp("(\\s|^)".concat(t,"(\\s|$)")))}function n(e,t){var s=t.split(" ");e.classList?e.classList.add(s[0]):o(e,s[0])||(e.className+=" ".concat(s[0])),s.length>1&&n(e,s.slice(1).join(" "))}function s(e,t){var n=t.split(" ");if(e.classList)e.classList.remove(n[0]);else if(o(e,n[0])){var a=new RegExp("(\\s|^)".concat(n[0],"(\\s|$)"));e.className=e.className.replace(a," ")}n.length>1&&s(e,n.slice(1).join(" "))}var a=document.getElementsByClassName("js-cd-top")[0],r=300,i=1200,l=!1;a&&(window.addEventListener("scroll",function(t){l||(l=!0,window.requestAnimationFrame?window.requestAnimationFrame(e):setTimeout(e,250))}),a.addEventListener("click",function(e){e.preventDefault(),window.requestAnimationFrame?t(700):window.scrollTo(0,0)})),Math.easeInOutQuad=function(e,t,o,n){return(e/=n/2)<1?o/2*e*e+t:(e--,-o/2*(e*(e-2)-1)+t)}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
